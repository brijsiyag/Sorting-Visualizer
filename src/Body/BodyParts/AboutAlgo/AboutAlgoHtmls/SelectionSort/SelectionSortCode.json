{
  "cpp": "// C++ program for implementation of selection sort\n#include <bits/stdc++.h>\nusing namespace std;\n\nvoid swap(int *xp, int *yp)\n{\n\tint temp = *xp;\n\t*xp = *yp;\n\t*yp = temp;\n}\n\nvoid selectionSort(int arr[], int n)\n{\n\tint i, j, min_idx;\n\n\t// One by one move boundary of unsorted subarray\n\tfor (i = 0; i < n-1; i++)\n\t{\n\t\t// Find the minimum element in unsorted array\n\t\tmin_idx = i;\n\t\tfor (j = i+1; j < n; j++)\n\t\tif (arr[j] < arr[min_idx])\n\t\t\tmin_idx = j;\n\n\t\t// Swap the found minimum element with the first element\n\t\tswap(&arr[min_idx], &arr[i]);\n\t}\n}\n\n/* Function to print an array */\nvoid printArray(int arr[], int size)\n{\n\tint i;\n\tfor (i=0; i < size; i++)\n\t\tcout << arr[i] << \" \";\n\tcout << endl;\n}\n\n// Driver program to test above functions\nint main()\n{\n\tint arr[] = {64, 25, 12, 22, 11};\n\tint n = sizeof(arr)/sizeof(arr[0]);\n\tselectionSort(arr, n);\n\tcout << \"Sorted array: \\n\";\n\tprintArray(arr, n);\n\treturn 0;\n}\n\n",
  "PseudoCode": "arr[] = 64 25 12 22 11\n\n// Find the minimum element in arr[0...4]\n// and place it at beginning\n11 25 12 22 64\n\n// Find the minimum element in arr[1...4]\n// and place it at beginning of arr[1...4]\n11 12 25 22 64\n\n// Find the minimum element in arr[2...4]\n// and place it at beginning of arr[2...4]\n11 12 22 25 64\n\n// Find the minimum element in arr[3...4]\n// and place it at beginning of arr[3...4]\n11 12 22 25 64 "
}
