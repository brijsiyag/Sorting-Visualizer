{
  "cpp": "// C++ program for implementation of Bubble sort\n#include <bits/stdc++.h>\nusing namespace std;\n\nvoid swap(int *xp, int *yp)\n{\n\tint temp = *xp;\n\t*xp = *yp;\n\t*yp = temp;\n}\n\n// A function to implement bubble sort\nvoid bubbleSort(int arr[], int n)\n{\n\tint i, j;\n\tfor (i = 0; i < n-1; i++)\t\n\t\n\t// Last i elements are already in place\n\tfor (j = 0; j < n-i-1; j++)\n\t\tif (arr[j] > arr[j+1])\n\t\t\tswap(&arr[j], &arr[j+1]);\n}\n\n/* Function to print an array */\nvoid printArray(int arr[], int size)\n{\n\tint i;\n\tfor (i = 0; i < size; i++)\n\t\tcout << arr[i] << \" \";\n\tcout << endl;\n}\n\n// Driver code\nint main()\n{\n\tint arr[] = {64, 34, 25, 12, 22, 11, 90};\n\tint n = sizeof(arr)/sizeof(arr[0]);\n\tbubbleSort(arr, n);\n\tcout<<\"Sorted array: \\n\";\n\tprintArray(arr, n);\n\treturn 0;\n}\n\n",
  "cpp-optimized": "// Optimized implementation of Bubble sort\n#include <bits/stdc++.h>\nusing namespace std;\nvoid swap(int *xp, int *yp)\n{\n\tint temp = *xp;\n\t*xp = *yp;\n\t*yp = temp;\n}\n\n// An optimized version of Bubble Sort\nvoid bubbleSort(int arr[], int n)\n{\nint i, j;\nbool swapped;\nfor (i = 0; i < n-1; i++)\n{\n\tswapped = false;\n\tfor (j = 0; j < n-i-1; j++)\n\t{\n\t\tif (arr[j] > arr[j+1])\n\t\t{\n\t\tswap(&arr[j], &arr[j+1]);\n\t\tswapped = true;\n\t\t}\n\t}\n\n\t// IF no two elements were swapped by inner loop, then break\n\tif (swapped == false)\n\t\tbreak;\n}\n}\n\n/* Function to print an array */\nvoid printArray(int arr[], int size)\n{\n\tint i;\n\tfor (i = 0; i < size; i++)\n\t\tcout <<\" \"<< arr[i];\n\tcout <<\" n\";\n}\n\n// Driver program to test above functions\nint main()\n{\n\tint arr[] = {64, 34, 25, 12, 22, 11, 90};\n\tint n = sizeof(arr)/sizeof(arr[0]);\n\tbubbleSort(arr, n);\n\tcout <<\"Sorted array: \\n\";\n\tprintArray(arr, n);\n\treturn 0;\n}\n\n\n// This code is contributed by shivanisinghss2110\n"
}
